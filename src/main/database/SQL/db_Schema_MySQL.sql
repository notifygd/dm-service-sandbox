
-- change time zone to UTC
set global time_zone = '+00:00';
set time_zone = '+00:00'; 

-- MySQL Script generated by MySQL Workbench
-- Thu Aug 10 20:39:03 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema digital7_digital_momentum
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `digital7_digital_momentum` ;

-- -----------------------------------------------------
-- Schema digital7_digital_momentum
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `digital7_digital_momentum` DEFAULT CHARACTER SET utf8mb4 ;
USE `digital7_digital_momentum` ;

-- -----------------------------------------------------
-- Table `choice_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `choice_list` ;

CREATE TABLE IF NOT EXISTS `choice_list` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `table_name` VARCHAR(45) NOT NULL,
  `col_name` VARCHAR(45) NOT NULL,
  `choice_value` VARCHAR(45) NULL,
  `choice_label` VARCHAR(128) NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `comment` ;

CREATE TABLE IF NOT EXISTS `comment` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `post_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post that the comment related to',
  `post_field` VARCHAR(25) NULL COMMENT 'column name in post table: description, factors, obstacles, solutions\nIndicatse the comment is for which field of the post',
  `created_by` BINARY(16) NOT NULL COMMENT 'The user who created the comment',
  `content` VARCHAR(500) NULL COMMENT 'comment content',
  `updated_by` BINARY(16) NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `comment_vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `comment_vote` ;

CREATE TABLE IF NOT EXISTS `comment_vote` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `comment_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post or comment',
  UNIQUE INDEX `tag_text_UNIQUE` (`user_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `country` ;

CREATE TABLE IF NOT EXISTS `country` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `country_code` VARCHAR(2) NOT NULL COMMENT 'ISO 3166 2 digits countr code\nhttps://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes',
  `country_name` VARCHAR(128) NULL,
  PRIMARY KEY (`country_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `location` ;

CREATE TABLE IF NOT EXISTS `location` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `country` VARCHAR(2) NULL COMMENT 'ISO 3166 2 digits countyr code\nhttps://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes',
  `region` VARCHAR(128) NULL COMMENT 'Top-level sub-national administrative features, such as states in the United States or provinces in Canada or China.',
  `district` VARCHAR(128) NULL COMMENT 'Features that are smaller than top-level administrative features but typically larger than cities.',
  `place` VARCHAR(128) NULL COMMENT 'Typically these are cities, villages, municipalities, etc. (refer to https://docs.mapbox.com/api/search/geocoding/)',
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `post` ;

CREATE TABLE IF NOT EXISTS `post` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `author_id` BINARY(16) NOT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'draft' COMMENT 'status of the post:\nENUM(\'draft\', \'published\', \'inactive\', \'reported\')',
  `title` VARCHAR(255) NOT NULL,
  `location_id` BINARY(16) NULL,
  `description` VARCHAR(4000) NOT NULL,
  `factors` VARCHAR(2000) NULL,
  `obstacles` VARCHAR(2000) NULL,
  `solutions` VARCHAR(1000) NULL,
  `viewed_count` INT NULL DEFAULT 0,
  `updated_count` INT NULL DEFAULT 0 COMMENT 'Can be calculated automatically by a trigger.',
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `post_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `post_tag` ;

CREATE TABLE IF NOT EXISTS `post_tag` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `post_id` BINARY(16) NOT NULL,
  `tag_id` BINARY(16) NOT NULL,
  `tag_type` VARCHAR(45) NULL COMMENT 'ENUM(\'sdg\', \'tag\'):\nIndicates this is a releationship between post and tag or post and sdg.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `post_vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `post_vote` ;

CREATE TABLE IF NOT EXISTS `post_vote` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `post_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post',
  `post_field` VARCHAR(45) NULL COMMENT 'ENUM(description, solution). Indicates which section of a post to vote.\" description\" respresents a group of  sections -  description, factors, and obstacles.',
  UNIQUE INDEX `tag_text_UNIQUE` (`user_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdg`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdg` ;

CREATE TABLE IF NOT EXISTS `sdg` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `sdg_number` INT NULL,
  `tag_text` VARCHAR(128) NOT NULL COMMENT 'refer to https://sdgs.un.org/goals',
  UNIQUE INDEX `tag_text_UNIQUE` (`tag_text` ASC) VISIBLE,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tag` ;

CREATE TABLE IF NOT EXISTS `tag` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `tag_text` VARCHAR(128) NOT NULL,
  UNIQUE INDEX `tag_text_UNIQUE` (`tag_text` ASC) VISIBLE,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user` ;

CREATE TABLE IF NOT EXISTS `user` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `email` VARCHAR(255) NOT NULL,
  `pwd_hash` VARCHAR(255) NOT NULL COMMENT 'SHA256-based encoding hash',
  `pwd_salt` VARCHAR(50) NOT NULL COMMENT 'a randonm string used for SHA256-based encoding',
  `user_name` VARCHAR(50) NOT NULL COMMENT 'The user handle name.Can be changed by the user.',
  `year_of_birth` YEAR NULL,
  `description` VARCHAR(255) NULL COMMENT 'self-description',
  `profile_image` VARCHAR(255) NULL COMMENT 'image file name',
  `location_id` BINARY(16) NOT NULL,
  `user_status` VARCHAR(45) NULL DEFAULT 0 COMMENT 'ENUM(new, verified, suspended, banned, canceled)',
  `user_role` VARCHAR(45) NULL COMMENT 'ENUM(\'registered\', \'moderator\', \'admin\'):\nguest users are not stored in DB.',
  `last_login_time` DATETIME NULL,
  `tmp_token` VARCHAR(16) NULL COMMENT 'Temporary token for email validation',
  `tmp_token_expire_on` DATETIME NULL COMMENT 'Eexpriation time for the temporary token for email validation',
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_feed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user_feed` ;

CREATE TABLE IF NOT EXISTS `user_feed` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `feed_type` VARCHAR(45) NULL COMMENT 'Indicate thie feed is for: following user,  SDG, Tag,or  country',
  `post_id` BINARY(16) NOT NULL COMMENT 'sys_id of the post',
  `is_viewed` TINYINT(1) NULL DEFAULT 0 COMMENT 'Indicates if the feed item is viewed or not.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_follows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user_follows` ;

CREATE TABLE IF NOT EXISTS `user_follows` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL COMMENT 'sys_id of the user who is being followed',
  `follows_type` VARCHAR(45) NULL COMMENT 'ENUM(\'post\',\'sdg\', \'tag\', \'location\', \'user\')\nIndicates the user is following  a post, a SDG, a tagr a country/location, or a user',
  `follows_id` BINARY(16) NULL COMMENT 'sys_id of the following item in follows_table.')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_preference`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user_preference` ;

CREATE TABLE IF NOT EXISTS `user_preference` (
  `sys_id` BINARY(16) NOT NULL DEFAULT (UUID_TO_BIN(UUID())),
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `notify_favourites` TINYINT(1) NULL,
  `notify_tags` TINYINT(1) NULL,
  `notify_countries` TINYINT(1) NULL,
  `notify_people` TINYINT(1) NULL,
  `user_id` BINARY(16) NOT NULL)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
